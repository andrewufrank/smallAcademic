# vim: ts=2 sw=2 expandtab

# rules are scanned top down till the first applies
definitions:
  - &main_db
    driver: 'sqlite'
    dsn: './stuff.sqlite'
data:
  menu: 'file://./menu.yml'
  settings: 'file://./settings.yml'

rules:
- pattern: '/'   # the special home page for landing first 
  data:
#    file: 'file://./data/pages/welcome.markdown'   # no file, is single page
    pageVar: 'file://./data/pages/welcome.markdown'
  template: 'pageTemplate.html'  # remove home.html
  
- pattern: '/allPosts'
  data:
    postsVar:          # the variable name in postList.html
      type: 'dir'
      path:   './data/posts'  # the directory from which to collect 
      fetch: 10
      order: '-mtime'  # why repeated from postList.html
  template:  'postList.html'

# the static page for image and style.css
- pattern: '/static/{{file:**}}'
  data:
    file: 'file://./static/{{file}}'
  static: true

# the static page for user data
- pattern: '/staticData/{{file:**}}'
  data:
    file: 'file://./data/staticData/{{file}}'
  static: true
 
 # the pages  
- pattern: '/{{page:*}}' # why is this not relative to data??
                                # - this is the called url!!
  data:
    file: 'glob://./data/pages/{{page}}.*'
    pageVar: 'file://./data/pages/{{page}}.*'
  required: [ 'pageVar' ]
  template: 'pageTemplate.html'
  
- pattern: '/cv/{{page:*}}'  # problem with constructed url 
  data:
    file: 'glob://./data/pages/cv/{{page}}.*'
    pageVar: 'file://./data/pages/cv/{{page}}.*'
  required: [ 'pageVar' ]
  template: 'pageTemplate.html'
  
# for the posts in separate posts dir  
- pattern: '/posts/{{post:*}}'
  data:
    file: 'glob://./data/posts/{{post}}.*'
    post: 'file://./data/posts/{{post}}.*'
  required: [ 'post' ]   # property which must exist - always true? 
  template: 'post.html'

# for all files in the page folder, even in subdir
- pattern: '/{{page:**}}' #  - this is the called url!!
  data:
    file: 'glob://./data/pages/{{page}}.*' # the file is relative to data, 
                                     # {{page}} includes pages
    pageVar: 'file://./data/pages/{{page}}.*'
  required: [ 'pageVar' ]
  template: 'pageTemplate.html'
# static serving works
#    file: 'file://./data/{{page}}'
#  static: true 

